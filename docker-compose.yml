# Environment variables DOCKER_CONFIG_DIR and DOCKER_DATA_DIR
# are defined in the .env file in the same directory.
---
services:
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    env_file: "linuxserver-common.env"
    environment:
      - VERSION=docker
    volumes:
      - ${DOCKER_CONFIG_DIR}/plex:/config
      - ${DOCKER_DATA_DIR}:/media
    restart: unless-stopped
  
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      # wireguard
      - 51820:51820/udp
      # qbittorrent
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
      # sabnzbd
      - 8085:8085
      # radarr
      - 7878:7878
      # prowlarr
      - 9696:9696
      # sonarr
      - 8989:8989
      # lidarr
      - 8686:8686
      # readarr
      - 8787:8787
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:wireguard
    env_file: "linuxserver-common.env"
    environment:
      - WEBUI_PORT=8080
    volumes:
      - ${DOCKER_CONFIG_DIR}/qbittorrent:/config
      - ${DOCKER_DATA_DIR}:/media
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    network_mode: service:wireguard
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/sabnzbd:/config
      - ${DOCKER_DATA_DIR}:/media
    restart: unless-stopped

  # Movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: service:wireguard
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/radarr:/config
      - ${DOCKER_DATA_DIR}:/media
    restart: unless-stopped
  
  # Indexers
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: service:wireguard
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/prowlarr:/config
    restart: unless-stopped

  # TV shows
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: service:wireguard
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/sonarr:/config
      - ${DOCKER_DATA_DIR}:/media
    restart: unless-stopped
  
  # Music
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    network_mode: service:wireguard
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/lidarr:/config
      - ${DOCKER_DATA_DIR}:/media
    restart: unless-stopped
  
  # Books
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    network_mode: service:wireguard
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/readarr:/config
      - ${DOCKER_DATA_DIR}:/media
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - TZ=America/New_York
      - WATCHTOWER_CLEANUP=true
    volumes:
      - ${DOCKER_CONFIG_DIR}/watchtower:/config
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  nginx:
    image: lscr.io/linuxserver/nginx:latest
    container_name: nginx
    env_file: "linuxserver-common.env"
    volumes:
      - ${DOCKER_CONFIG_DIR}/nginx:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    env_file: "linuxserver-common.env"
    # environment:
      # - DEFAULT_WORKSPACE=/config/workspace
    volumes:
      - ${DOCKER_CONFIG_DIR}/code-server:/config
      - ${DOCKER_DATA_DIR}/projects:/projects
    ports:
      - 8443:8443
    restart: unless-stopped

  # networks:
  #   wireguard_net:
  #     driver: bridge

  # openvscode-server:
  #   image: lscr.io/linuxserver/openvscode-server:latest
  #   container_name: openvscode-server
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/New_York
  #     # - CONNECTION_TOKEN= #optional
  #     # - CONNECTION_SECRET= #optional
  #     # - SUDO_PASSWORD=password #optional
  #     # - SUDO_PASSWORD_HASH= #optional
  #   volumes:
  #     - ${DOCKER_CONFIG_DIR}/openvscode-server:/config
  #     - ${DOCKER_DATA_DIR}/projects:/projects
  #   ports:
  #     - 3000:3000
  #   restart: unless-stopped
